#!/usr/bin/env node
/*
 * Copyright IBM Corp. 2023, 2024
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var h=Object.defineProperty;var m=(o,t)=>()=>(o&&(t=o(o=0)),t);var g=(o,t)=>{for(var n in t)h(o,n,{get:t[n],enumerable:!0})};var l={};g(l,{createLogFilePath:()=>v});import{tmpdir as w}from"os";import{join as y}from"path";function v(o){let t=Math.round(Math.random()*999999).toString().padStart(6,"0");return y(w(),`ibmtelemetry-${o.replace(/[:.-]/g,"")}-${t}.log`)}var p=m(()=>{"use strict"});var x=function(o,t,n,r){function a(e){return e instanceof n?e:new n(function(c){c(e)})}return new(n||(n=Promise))(function(e,c){function u(i){try{s(r.next(i))}catch(d){c(d)}}function f(i){try{s(r.throw(i))}catch(d){c(d)}}function s(i){i.done?e(i.value):a(i.value).then(u,f)}s((r=r.apply(o,t||[])).next())})};function _(){return x(this,void 0,void 0,function*(){let o=yield import("child_process"),t=yield import("path"),{fileURLToPath:n}=yield import("url"),{createLogFilePath:r}=yield Promise.resolve().then(()=>(p(),l)),a=new Date().toISOString(),e=r(a);console.log("Log file:",e),o.spawn(process.argv0,[t.join(t.dirname(n(import.meta.url)),"background-process.js"),`--log=${e}`,...process.argv.slice(2)],{stdio:"ignore",detached:!0,shell:!0}).unref()})}export{_ as spawnBackgroundProcess};
